Теги article и section, разделы страницы

С шапками, подвалами и основным содержанием разобрались. Теперь перейдём к остальным разделам сайта.

Разметим разделы «Обо мне» и «Последние посты». Используем для этого теги <section> и <article>:

    <section> — смысловой или логический раздел документа;
    <article> — самостоятельный и независимый раздел документа.

Чтобы не было путаницы, разберём где и когда использовать разные контейнеры:

    <div> — контейнер общего назначения, не обязательно смысловой. Дивы используются для разметки мелких блоков, создания сетки и декоративных эффектов.
    <section> — более крупный логический контейнер, объединяющий содержание по смыслу. Например, блок «О компании», список товаров, раздел личной информации в профиле и так далее.
    <article> — самостоятельный, цельный и независимый раздел документа. Этот раздел можно в неизменном виде использовать в различных местах, в том числе и на других сайтах. Примеры: статья, пост в блоге, сообщение на форуме и так далее.

Как правило, в разделы <section> и <article> включают заголовки, резюмирующие содержимое разделов.

Всего может быть шесть уровней заголовков. Размечаются они тегами <h1>, <h2> … <h6>. А как правильно определить нужный уровень заголовков?

При озаглавливании разделов учитывается общая иерархия текстового содержимого страницы: сначала определяется, о чём эта страница целиком, какие разделы документа более крупные, какие — дополнительные. В итоге заголовки должны из себя представлять явное дерево: от главного <h1> на странице до структурно следующих за ним <h2>, <h3> и так далее.

Пример:

h1 — Интернет-магазин зоотоваров «Усы, лапы и хвост»
h2 — Список товаров
h2 — Похожие предложения
h3 — Когтеточка «Росомаха»
h3 — Палка с пером «Шерстяной охотник»
…


<aside> — это дополнительное содержание, не связанное напрямую с основным. Ещё такие блоки часто называют «сайдбарами» или боковыми панелями.

 HTML есть специальный тег для обозначения даты и времени — <time>. С помощью <time> можно описывать даты одновременно и для человека, и для машины, например:

<time datetime="2014-04-20">Вчера</time> мы готовили курс к публикации.

Браузер отображает только содержимое тега, а содержимое datetime не отображается. Человек увидит только слово «вчера», а машина прочитает атрибут и получит дату в нужном ей формате. И все довольны.

Тег <figure> — он обозначает цельный и независимый блок содержания. Внутри этого тега размещают демонстрационный материал: изображения, схемы, куски кода и так далее.

Обычно каждый такой материал сопровождает разъясняющий комментарий или «легенда». Для обозначения этого комментария и предназначен ещё один новый тег — <figcaption>, который размещается первым или последним элементом внутри <figure>. Пример:

<figure>
  схема,
  график,
  диаграмма
  и так далее
  <figcaption>Легенда</figcaption>
</figure>

В HTML с самого начала было очень просто вставлять изображения, но очень сложно видео и аудио. Сейчас эта проблема решена.

Для вставки видео предназначен специальный парный тег <video>. Его основные атрибуты:
width и height	задают ширину и высоту видео
controls	пустой атрибут, при наличии которого отображается панель управления видео
preload	задаёт режим предзагрузки видео, имеет 3 возможных значения:

    none — не загружать ничего;
    metadata — загрузить служебную мета-информацию (длительность, первый кадр и так далее);
    auto — можно загрузить всё видео.

значение по умолчанию зависит от браузера
src	задаёт адрес видеофайла
autoplay	пустой атрибут, при наличии которого воспроизведение видео начинается автоматически.
В текущий момент существует несколько форматов видео, каждый из которых хорошо поддерживается лишь некоторыми браузерами. Вот три самых распространённых формата и их поддержка:

    MPEG-4/H.264
    OGG/Theora
    WebM

Поэтому мы должны в видео указывать адреса файлов во всех этих форматах (и конвертировать исходное видео в эти форматы, конечно). Делается это с помощью тегов <source>:

<video controls>
  <source src="video.mp4" type="video/mp4">
  <source src="video.ogv" type="video/ogg">
  <source src="video.webm" type="video/webm">
</video>

В атрибуте src указывается адрес видеофайла, а в атрибуте type его тип (также там могут указываться и кодеки). Браузер из списка видеофайлов выбирает первый, который может проиграть и загружает его.

Атрибут type не является обязательным, так как браузер умеет сам определять тип и кодеки, но указывая тип явно, мы помогаем ему не ошибиться.


Работа с аудио в HTML очень похожа на работу с видео, только у тега для аудио чуть меньше параметров.

Для вставки звука предназначен тег <audio>. Его основные атрибуты:
controls	пустой атрибут, при наличии которого отображается панель управления проигрывателем
preload	задаёт режим предзагрузки аудио, имеет 3 возможных значения:

    none — не загружать ничего;
    metadata — загрузить служебную мета-информацию;
    auto — можно загрузить весь файл.

значение по умолчанию зависит от браузера
src	задаёт адрес аудиофайла
autoplay	пустой атрибут, при наличии которого воспроизведение звука начинается автоматически.


У звуковых файлов с поддержкой форматов дела обстоят лучше, чем у видео.

Для охвата большинства современных браузеров, достаточно использовать всего два формата:

    MP3
    OGG

И снова мы не можем указать только один файл в атрибуте src у тега <audio>. Мы должны так же, как и в случае с видео, перечислить адреса звуковых файлов в разных форматах с помощью тегов <source>:

<audio controls>
  <source src="sound.mp3" type="audio/mpeg">
  <source src="sound.oga" type="audio/ogg">
</audio>

Теги <source> в аудио работают так же, как и в видео.



